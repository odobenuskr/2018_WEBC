--------------------------------------------------------------------
(문제1) memberObj데이터를 JSON포맷으로 "member.json"파일에 저장 및 복원

string

(memberJson)
[{"name":"홍길동","weight":86,"rrid":"960330-1306548"},{"name":"김철수","weight":63,"rrid":"050810-3
306548"},{"name":"오영희","weight":48,"rrid":"030702-4138926"},{"name":"윤명숙","weight":43,"rrid":"
030302-2306548"},{"name":"이하나","weight":52,"rrid":"980330-2306548"}]

(memberJson2)
[
  {
    "name": "홍길동",
    "weight": 86,
    "rrid": "960330-1306548"
  },
  {
    "name": "김철수",
    "weight": 63,
    "rrid": "050810-3306548"
  },
  {
    "name": "오영희",
    "weight": 48,
    "rrid": "030702-4138926"
  },
  {
    "name": "윤명숙",
    "weight": 43,
    "rrid": "030302-2306548"
  },
  {
    "name": "이하나",
    "weight": 52,
    "rrid": "980330-2306548"
  }
]
--------------------

object

(memberObj2)
[ { name: '홍길동', weight: 86, rrid: '960330-1306548' },
  { name: '김철수', weight: 63, rrid: '050810-3306548' },
  { name: '오영희', weight: 48, rrid: '030702-4138926' },
  { name: '윤명숙', weight: 43, rrid: '030302-2306548' },
  { name: '이하나', weight: 52, rrid: '980330-2306548' } ]

--------------------
(file:member.json) 읽어와 memberObj3에 복원하기

(memberFile)
[
  {
    "name": "홍길동",
    "weight": 86,
    "rrid": "960330-1306548"
  },
  {
    "name": "김철수",
    "weight": 63,
    "rrid": "050810-3306548"
  },
  {
    "name": "오영희",
    "weight": 48,
    "rrid": "030702-4138926"
  },
  {
    "name": "윤명숙",
    "weight": 43,
    "rrid": "030302-2306548"
  },
  {
    "name": "이하나",
    "weight": 52,
    "rrid": "980330-2306548"
  }
]

(memberFile.toString())
[
  {
    "name": "홍길동",
    "weight": 86,
    "rrid": "960330-1306548"
  },
  {
    "name": "김철수",
    "weight": 63,
    "rrid": "050810-3306548"
  },
  {
    "name": "오영희",
    "weight": 48,
    "rrid": "030702-4138926"
  },
  {
    "name": "윤명숙",
    "weight": 43,
    "rrid": "030302-2306548"
  },
  {
    "name": "이하나",
    "weight": 52,
    "rrid": "980330-2306548"
  }
]

(memberObj)
[ { name: '홍길동', weight: 86, rrid: '960330-1306548' },
  { name: '김철수', weight: 63, rrid: '050810-3306548' },
  { name: '오영희', weight: 48, rrid: '030702-4138926' },
  { name: '윤명숙', weight: 43, rrid: '030302-2306548' },
  { name: '이하나', weight: 52, rrid: '980330-2306548' } ]

(memberObj3)
[ { name: '홍길동', weight: 86, rrid: '960330-1306548' },
  { name: '김철수', weight: 63, rrid: '050810-3306548' },
  { name: '오영희', weight: 48, rrid: '030702-4138926' },
  { name: '윤명숙', weight: 43, rrid: '030302-2306548' },
  { name: '이하나', weight: 52, rrid: '980330-2306548' } ]

memberObj와 memberObj3는 같습니다.


--------------------------------------------------------------------
(문제2) <underscore>모듈을 사용하여 정렬하기

--------------------
sort
- 객체 이름(name)으로 정렬
[ { name: '김철수', weight: 63, rrid: '050810-3306548' },
  { name: '오영희', weight: 48, rrid: '030702-4138926' },
  { name: '윤명숙', weight: 43, rrid: '030302-2306548' },
  { name: '이하나', weight: 52, rrid: '980330-2306548' },
  { name: '홍길동', weight: 86, rrid: '960330-1306548' } ]

- 객체 주민번호(rrid)로 정렬
[ { name: '윤명숙', weight: 43, rrid: '030302-2306548' },
  { name: '오영희', weight: 48, rrid: '030702-4138926' },
  { name: '김철수', weight: 63, rrid: '050810-3306548' },
  { name: '홍길동', weight: 86, rrid: '960330-1306548' },
  { name: '이하나', weight: 52, rrid: '980330-2306548' } ]

(memberObj3)
[ { name: '홍길동', weight: 86, rrid: '960330-1306548' },
  { name: '김철수', weight: 63, rrid: '050810-3306548' },
  { name: '오영희', weight: 48, rrid: '030702-4138926' },
  { name: '윤명숙', weight: 43, rrid: '030302-2306548' },
  { name: '이하나', weight: 52, rrid: '980330-2306548' },
  { name: '성공함', weight: 67, rrid: '950810-3306548' } ]


--------------------------------------------------------------------
(문제3) map(???).filter(???).reduce(???) 연속호출(chaining) 사용하기
총(평균) 체중 = 359(59.833333333333336)
총(평균) 체중 = 359(59.833333333333336)
60kg 이상 사람 = 3명

(mappedMemberObj)
[ { name: '홍길동', weight: 86, rrid: '960330-1306548', '성별': '남자' },
  { name: '김철수', weight: 63, rrid: '050810-3306548', '성별': '남자' },
  { name: '오영희', weight: 48, rrid: '030702-4138926', '성별': '여자' },
  { name: '윤명숙', weight: 43, rrid: '030302-2306548', '성별': '여자' },
  { name: '이하나', weight: 52, rrid: '980330-2306548', '성별': '여자' },
  { name: '성공함', weight: 67, rrid: '950810-3306548', '성별': '남자' } ]

여성 = 3명


--------------------------------------------------------------------
(문제4) Member() 생성자함수에 prototype.성별() 메소드 정의 및 사용하기

Member.prototype.성별() 메소드 정의

Member()생성자함수와 성별()을 사용하여 mappedMemberObj로부터 memberObj4객체생성

(memberObj4)
[ Member { name: '홍길동', weight: 86, rrid: '960330-1306548' },
  Member { name: '김철수', weight: 63, rrid: '050810-3306548' },
  Member { name: '오영희', weight: 48, rrid: '030702-4138926' },
  Member { name: '윤명숙', weight: 43, rrid: '030302-2306548' },
  Member { name: '이하나', weight: 52, rrid: '980330-2306548' },
  Member { name: '성공함', weight: 67, rrid: '950810-3306548' } ]

(memberObj4)
[ Member { name: '홍길동', weight: 86, rrid: '960330-1306548', '성별': '남자' },
  Member { name: '김철수', weight: 63, rrid: '050810-3306548', '성별': '남자' },
  Member { name: '오영희', weight: 48, rrid: '030702-4138926', '성별': '여자' },
  Member { name: '윤명숙', weight: 43, rrid: '030302-2306548', '성별': '여자' },
  Member { name: '이하나', weight: 52, rrid: '980330-2306548', '성별': '여자' },
  Member { name: '성공함', weight: 67, rrid: '950810-3306548', '성별': '남자' } ]

memberObj4와 mappedMemberObj는 같습니다.
